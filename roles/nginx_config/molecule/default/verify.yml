---
- name: Verify
  hosts: all
  tasks:
    - name: Check if NGINX is installed
      ansible.builtin.package:
        name: nginx
        state: present
      check_mode: true
      register: install
      failed_when: (install is changed) or (install is failed)

    - name: Check if NGINX service is running
      ansible.builtin.service:
        name: nginx
        state: started
        enabled: true
      check_mode: true
      register: service
      failed_when: (service is changed) or (service is failed)

    - name: Check that a page returns a status 200 and fail if the words Hello World are not in the page contents
      ansible.builtin.uri:
        url: http://localhost
        return_content: true
      register: this
      failed_when: "'Hello World' not in this.content"

    - name: Check client body cache directory exists
      ansible.builtin.stat:
        path: /var/cache/nginx/client
      check_mode: true
      register: stat_result
      failed_when: not stat_result.stat.exists

    - name: Check proxy cache directory exists
      ansible.builtin.stat:
        path: /var/cache/nginx/proxy
      check_mode: true
      register: stat_result
      failed_when: not stat_result.stat.exists

    - name: Check default.conf exists
      ansible.builtin.stat:
        path: /etc/nginx/conf.d/default.conf
      check_mode: true
      register: stat_result
      failed_when: not stat_result.stat.exists

    - name: Check frontend_default.conf exists
      ansible.builtin.stat:
        path: /etc/nginx/conf.d/frontend_default.conf
      check_mode: true
      register: stat_result
      failed_when: not stat_result.stat.exists

    - name: Check backend_default.conf exists
      ansible.builtin.stat:
        path: /etc/nginx/conf.d/backend/backend_default.conf
      check_mode: true
      register: stat_result
      failed_when: not stat_result.stat.exists

    - name: Ensure default.conf contains 'location /'
      ansible.builtin.lineinfile:
        path: /etc/nginx/conf.d/default.conf
        line: "    location / {"
        state: present
      check_mode: true
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    - name: Ensure frontend_default.conf contains 'alias directive'
      ansible.builtin.lineinfile:
        path: /etc/nginx/conf.d/frontend_default.conf
        line: "        alias /usr/share/nginx/html;"
        state: present
      check_mode: true
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    - name: Ensure default.conf contains 'location /backend'
      ansible.builtin.lineinfile:
        path: /etc/nginx/conf.d/default.conf
        line: "    location /backend {"
        state: present
      check_mode: true
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    - name: Ensure default.conf contains 'client_max_body_size 1m;'
      ansible.builtin.lineinfile:
        path: /etc/nginx/conf.d/default.conf
        line: "client_max_body_size 1m;"
        state: present
      check_mode: true
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    - name: Ensure default.conf contains 'rewrite (.*).html(.*) $1$2 last;'
      ansible.builtin.lineinfile:
        path: /etc/nginx/conf.d/default.conf
        line: "    rewrite (.*).html(.*) $1$2 last;"
        state: present
      check_mode: true
      register: conf
      failed_when: (conf is changed) or (conf is failed)
