---
- name: Verify
  hosts: all
  tasks:
    - name: Check if NGINX Plus is installed
      ansible.builtin.package:
        name: nginx-plus
        state: present
      check_mode: true
      register: install
      failed_when: (install is changed) or (install is failed)

    - name: Check if NGINX service is running
      ansible.builtin.service:
        name: nginx
        state: started
        enabled: true
      check_mode: true
      register: service
      failed_when: (service is changed) or (service is failed)

    - name: Functional tests
      block:
        - name: Check that a page returns a status 200 and fail if the words Hello World are not in the page contents
          ansible.builtin.uri:
            url: "http://localhost"
            return_content: true
          register: this
          failed_when: "'Hello World' not in this.content"

        - name: Check that a page returns a status 200 and fail if the words Request Rejected are not in the page contents
          ansible.builtin.uri:
            url: "http://localhost/?v=<script>"
            return_content: true
          register: this
          failed_when: "'Request Rejected' not in this.content"

        - name: Ensure /var/log/messages contains block event from above test
          ansible.builtin.shell: grep -c "Non-browser Client,Abuse of Functionality,Cross Site Scripting (XSS)" /var/log/messages || true
          register: event
          changed_when: false
          failed_when: event.stdout == "0"
      when: ansible_os_family != "Alpine"

    - name: Check default.conf exists
      ansible.builtin.stat:
        path: /etc/nginx/conf.d/default.conf
      check_mode: true
      register: stat_result
      failed_when: not stat_result.stat.exists

    - name: Check frontend_default.conf exists
      ansible.builtin.stat:
        path: /etc/nginx/conf.d/frontend_default.conf
      check_mode: true
      register: stat_result
      failed_when: not stat_result.stat.exists

    - name: Check backend_default.conf exists
      ansible.builtin.stat:
        path: /etc/nginx/conf.d/backend_default.conf
      check_mode: true
      register: stat_result
      failed_when: not stat_result.stat.exists

    - name: Ensure default.conf contains 'location /'
      ansible.builtin.lineinfile:
        path: /etc/nginx/conf.d/default.conf
        line: "    location / {"
        state: present
      check_mode: true
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    - name: Ensure default.conf contains 'location /backend'
      ansible.builtin.lineinfile:
        path: /etc/nginx/conf.d/default.conf
        line: "    location /backend {"
        state: present
      check_mode: true
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    - name: Ensure default.conf contains 'client_max_body_size 512k;'
      ansible.builtin.lineinfile:
        path: /etc/nginx/conf.d/default.conf
        line: "    client_max_body_size 512k;"
        state: present
      check_mode: true
      register: conf
      failed_when: (conf is changed) or (conf is failed)
